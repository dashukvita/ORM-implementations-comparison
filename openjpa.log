
154  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1021  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestPerson.model.Person]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
130  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1591  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestPerson.model.Person]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
61  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
135  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
154  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1130  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestPerson.model.Person]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
159  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
913  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestPerson.model.Person]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
15  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
739  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestPerson.model.Person]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
16  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
726  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestPerson.model.Person]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
13  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
726  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestPerson.model.Person]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
15  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
602  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestPerson.model.Person]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
1368  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1392  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestPerson.model.Person]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
10  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
638  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestPerson.model.Person]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
1510  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1533  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestPerson.model.Person]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
60  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
737  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestPerson.model.Person]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
1  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
22  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestPerson.model.Person]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
49  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
730  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestPerson.model.Person]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
1  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
22  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestPerson.model.Person]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
106  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1049  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestPerson.model.Person]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
69  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1065  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
60  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
757  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
63  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
826  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
60  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
780  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
64  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
837  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
57  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
793  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
73  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
850  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
94  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
880  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
86  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
783  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
78  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
803  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
64  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
864  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
97  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
712  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
74  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1029  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
63  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
834  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
58  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
971  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
62  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
896  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
80  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1091  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
63  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
853  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
68  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
813  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
57  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
837  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
60  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
823  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
77  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
809  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
62  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
734  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
101  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1295  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
82  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1159  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
82  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1362  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
63  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
766  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
81  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
886  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
66  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
788  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
60  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
789  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
80  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
876  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
57  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
914  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
104  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
809  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
67  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
817  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
66  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
787  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
75  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
828  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
100  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1051  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
88  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1101  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
58  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
828  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
79  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1139  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
66  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
967  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
124  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1289  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
65  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
753  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
64  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
833  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
74  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
774  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
66  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
815  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
71  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
869  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
64  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
801  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
93  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
871  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
81  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
921  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
91  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
993  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
101  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1010  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
86  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
831  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
105  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1069  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
71  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
869  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
66  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
941  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
82  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1069  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
79  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
959  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
69  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
896  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
71  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
927  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
74  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
801  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
83  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
859  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
75  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
881  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
85  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
825  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
71  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
712  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
108  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
869  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
79  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
852  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
58  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
831  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
92  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
847  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
78  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
905  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
61  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
690  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
70  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
798  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
65  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
778  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
64  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
903  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
118  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
950  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
81  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
969  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
104  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
924  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
58  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
750  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
76  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
356  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
72  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
317  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
68  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
749  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
61  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
705  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
75  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
298  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
62  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
829  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
58  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
804  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
95  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1097  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
72  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
806  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
106  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
868  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
53  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
881  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
87  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
866  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
72  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1037  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
108  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
869  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
67  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
802  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
80  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1036  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
92  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
873  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
92  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1154  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
120  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
989  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
84  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
879  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
89  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
861  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
79  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
960  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
72  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1032  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
105  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
987  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
69  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
779  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
67  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
780  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
74  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
903  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
89  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
978  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
82  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1023  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
83  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
849  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
216  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1333  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
60  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
950  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
53  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
696  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
98  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
806  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
98  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
874  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
76  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
971  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
77  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
880  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
73  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
761  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
72  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
817  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
77  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
855  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
145  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1261  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
83  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
865  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
65  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
824  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
64  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
896  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
77  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
865  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
89  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
811  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
66  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
806  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
73  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
901  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
77  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
868  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
158  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
901  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
83  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
899  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
128  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
894  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
90  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
738  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
73  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
873  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
59  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
844  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
69  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
848  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
53  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
827  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
144  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
1007  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
72  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
359  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
147  jpa-openjpa  INFO   [main] openjpa.Runtime - Starting OpenJPA 3.1.1
961  jpa-openjpa  WARN   [main] openjpa.Enhance - Creating subclass for "[class ru.jpa.Tests.TestInheritancePerson.model.PersonBase, class ru.jpa.Tests.TestCollectionPerson.model.PersonCollection, class ru.jpa.Tests.TestPerson.model.Person, class ru.jpa.Tests.TestInheritancePerson.model.PersonExtExt, class ru.jpa.Tests.TestOneToManyPerson.model.AddressOneToMany, class ru.jpa.Tests.TestInheritancePerson.model.AbstractIdentifiableObject, class ru.jpa.Tests.TestInheritancePerson.model.PersonExt, class ru.jpa.Tests.TestJPQLPerson.model.SimplePerson, class ru.jpa.Tests.TestCollectionPerson.model.AddressCollection, class ru.jpa.Tests.TestIndexedPerson.model.PersonIndexed, class ru.jpa.Tests.TestOneToManyPerson.model.PersonOneToMany]". This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.
